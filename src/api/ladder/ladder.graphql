type Ladder implements Node {
    id: ID!
    ladderName: String!
    inviteToken: String!
    createdAt: String
    updatedAt: String
    myLadderUser: LadderUser
    ladderUser(userId: ID!): LadderUser
    ladderUsers(orderBy: LadderUsersOrderBy): [LadderUser!]!
    matches(offset: Int, limit: Int): [Match!]!
    matchCount: Int
}

enum LadderUsersOrderBy {
    rank_DESC
}

extend type Query {
    ladders: [Ladder!]!
    ladder(id: ID!): Ladder
    ladderByInviteToken(token: String!): Ladder
}

extend type Mutation {
    newLadder(ladderName: String!): LadderUser!
    joinLadder(token: String!): LadderUser!
}
