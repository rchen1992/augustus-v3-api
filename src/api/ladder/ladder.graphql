type Ladder implements Node {
    id: ID!
    ladderName: String!
    inviteToken: String!
    createdAt: String
    updatedAt: String
    userRating: Int
    userRatingDelta: Int
    userRank: Int
    userMatchStats: UserMatchStats
    users(orderBy: LadderUsersOrderBy): [User!]!
    matches(offset: Int, limit: Int): [Match!]!
}

type UserMatchStats {
    matchCount: Int
    winCount: Int
    lossCount: Int
    tieCount: Int
}

enum LadderUsersOrderBy {
    rank_DESC
}

extend type Query {
    ladders: [Ladder!]!
    ladder(id: ID!): Ladder
}

extend type Mutation {
    newLadder(ladderName: String!): Ladder!
}
